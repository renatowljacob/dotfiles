#!/bin/bash

for pid in $(pidof -x "dusk_statusbar"); do
	if [ $pid != $$ ]; then
		if [ "$(cat /proc/$pid/environ | tr '\0' '\n' | awk '/^DISPLAY/')" == "DISPLAY=$DISPLAY" ]; then
			echo "$(date +"%F %T"): dusk_statusbar is already running with PID $pid, killing"
			kill $pid
		fi
	fi
done

wait_for_ipc_handler () {
	seconds=$1

	for (( d=1; d<=2*${seconds}; d++ ))
	do
		sleep 0.5
		duskc --ignore-reply get_monitors 2>/dev/null 1>&2
		if [ $? = 0 ]; then
			return
		fi
	done

	echo "Failed to reach IPC handler, bailing"
	exit
}

SETSTATUS="duskc --ignore-reply run_command setstatus"

$SETSTATUS 0 "$(sb-calendar)" 
$SETSTATUS 1 "$(sb-clock)" 
$SETSTATUS 2 "$(sb-memory)"
$SETSTATUS 3 "$(sb-volume)" 
$SETSTATUS 4 "$(sb-updates)"

secs=0
while true; do
	$SETSTATUS 2 "$(sb-memory)" &
	$SETSTATUS 5 "$(sb-spotify)" &

	if [ $? != 0 ]; then
		wait_for_ipc_handler 30
	fi

	if [ $((secs % 60)) = 0 ]; then
		$SETSTATUS 0 "$(sb-calendar)" &
		$SETSTATUS 1 "$(sb-clock)" &
	fi

	# Update these once after 1 minute, i.e. hourly
	if [ $secs = 60 ]; then
		$SETSTATUS 3 "$(sb-volume)" &
		$SETSTATUS 4 "$(sb-updates)" &
	fi

	# Restart script every hour
	if [ $secs = 3600 ]; then
		exec ${BASH_SOURCE[0]}
	fi

	((secs+=2))
	sleep 2
done
