#!/bin/sh
#
# From https://github.com/ericmurphyxyz/dotfiles/blob/master/.local/bin/volume

# Control volume using Pipewire and send a notification

send_notification()
{
    if [ "$1" = "mute" ]; then
        icon="mute"
    elif [ "${volume}" -lt 33 ]; then
        icon="off"
    elif [ "${volume}" -lt 66 ]; then
        icon="low"
    else
        icon="high"
    fi

    if [ "$1" = "mute" ]; then
        text="Currently muted"
    else
        text="Currently at ${volume}%"
    fi

    dunstify -a "Volume" -r 9990 -h int:value:"${volume}" -i "volume-${icon}" \
        "Volume" "${text}"
}

update()
{
    if ps -C dusk > /dev/null; then
        duskc --ignore-reply run_command setstatus 3 "$(sb-volume)"
    fi
}

case $1 in
up)
    # Set the volume on (if it was muted)
    wpctl set-mute @DEFAULT_AUDIO_SINK@ 0
    wpctl set-volume -l 1.5 @DEFAULT_AUDIO_SINK@ 5%+
    update
    ;;
down)
    wpctl set-mute @DEFAULT_AUDIO_SINK@ 0
    wpctl set-volume -l 1.5 @DEFAULT_AUDIO_SINK@ 5%-
    update
    ;;
mute)
    wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
    update
    ;;
esac

volume=$(
    wpctl get-volume @DEFAULT_AUDIO_SINK@ \
        | tr -dc '0-9' \
        | sed 's/^0\{1,2\}//'
)

case $1 in
mute)
    case "$(wpctl get-volume @DEFAULT_AUDIO_SINK@)" in
    *MUTED*) send_notification mute ;;
    *) send_notification ;;
    esac
    ;;
*) send_notification ;;
esac
